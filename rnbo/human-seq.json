{
  "desc": {
    "parameters": [
      {
        "type": "ParameterTypeNumber",
        "index": 0,
        "name": "lookahead",
        "paramId": "p_obj-12/lookahead",
        "minimum": 0,
        "maximum": 2,
        "exponent": 1,
        "steps": 3,
        "initialValue": 1,
        "isEnum": true,
        "enumValues": [
          "0",
          "1",
          "10"
        ],
        "displayName": "Lookahead",
        "unit": "ms",
        "order": 1,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 1,
        "name": "volume",
        "paramId": "p_obj-12/volume",
        "minimum": -100,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Volume",
        "unit": "%",
        "order": 5,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 2,
        "name": "comp",
        "paramId": "p_obj-12/comp",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 25,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "%",
        "order": 2,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 3,
        "name": "softclip",
        "paramId": "p_obj-12/softclip",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 2,
        "initialValue": 0,
        "isEnum": true,
        "enumValues": [
          "0",
          "1"
        ],
        "displayName": "",
        "unit": "On/Off",
        "order": 6,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 4,
        "name": "attack",
        "paramId": "p_obj-12/attack",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 25,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Attack",
        "unit": "%",
        "order": 3,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 5,
        "name": "sustain",
        "paramId": "p_obj-12/sustain",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 25,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Sustain",
        "unit": "%",
        "order": 4,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 6,
        "name": "octdamp",
        "paramId": "p_obj-345/octdamp",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 50,
        "isEnum": false,
        "enumValues": [],
        "displayName": "OctDamp",
        "unit": "%",
        "order": 14,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 7,
        "name": "octvol",
        "paramId": "p_obj-345/octvol",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 50,
        "isEnum": false,
        "enumValues": [],
        "displayName": "OctVol",
        "unit": "%",
        "order": 13,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 8,
        "name": "mix",
        "paramId": "p_obj-345/mix",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 50,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Mic",
        "unit": "%",
        "order": 15,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 9,
        "name": "damp",
        "paramId": "p_obj-345/damp",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 20,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Damp",
        "unit": "%",
        "order": 5,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 10,
        "name": "decay",
        "paramId": "p_obj-345/decay",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 70,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Decay",
        "unit": "%",
        "order": 1,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 11,
        "name": "pitchvol",
        "paramId": "p_obj-345/pitchvol",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "PitchVol",
        "unit": "%",
        "order": 12,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 12,
        "name": "revvol",
        "paramId": "p_obj-345/revvol",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 100,
        "isEnum": false,
        "enumValues": [],
        "displayName": "RevVol",
        "unit": "%",
        "order": 11,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 13,
        "name": "jitter",
        "paramId": "p_obj-345/jitter",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 50,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Jitter",
        "unit": "%",
        "order": 4,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 14,
        "name": "size",
        "paramId": "p_obj-345/size",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 75,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Size",
        "unit": "%",
        "order": 2,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 15,
        "name": "diff",
        "paramId": "p_obj-345/diff",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 50,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Diff",
        "unit": "%",
        "order": 3,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 16,
        "name": "pitch",
        "paramId": "p_obj-345/pitch",
        "minimum": -24,
        "maximum": 24,
        "exponent": 1,
        "steps": 0,
        "initialValue": 12,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Pitch",
        "unit": "st",
        "order": 6,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 17,
        "name": "chorus",
        "paramId": "p_obj-345/chorus",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 50,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Chorus",
        "unit": "%",
        "order": 10,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 18,
        "name": "feedback",
        "paramId": "p_obj-345/feedback",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 50,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Feedback",
        "unit": "%",
        "order": 9,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 19,
        "name": "window",
        "paramId": "p_obj-345/window",
        "minimum": 25,
        "maximum": 250,
        "exponent": 1,
        "steps": 0,
        "initialValue": 125,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Window",
        "unit": "ms",
        "order": 7,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 20,
        "name": "delay",
        "paramId": "p_obj-345/delay",
        "minimum": 0,
        "maximum": 1000,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Delay",
        "unit": "ms",
        "order": 8,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 21,
        "name": "left_delay",
        "paramId": "stereo_delay[1]/left_delay",
        "minimum": 10,
        "maximum": 10000,
        "exponent": 1,
        "steps": 0,
        "initialValue": 300,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 22,
        "name": "fb",
        "paramId": "stereo_delay[1]/fb",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0.25,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 23,
        "name": "right_delay",
        "paramId": "stereo_delay[1]/right_delay",
        "minimum": 10,
        "maximum": 10000,
        "exponent": 1,
        "steps": 0,
        "initialValue": 400,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 24,
        "name": "freq",
        "paramId": "p_obj-21/freq",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 30,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Freq",
        "unit": "%",
        "order": 1,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 25,
        "name": "spread",
        "paramId": "p_obj-21/spread",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 2,
        "initialValue": 0,
        "isEnum": true,
        "enumValues": [
          "0",
          "1"
        ],
        "displayName": "Spread",
        "unit": "On/Off",
        "order": 3,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 26,
        "name": "mode",
        "paramId": "p_obj-21/mode",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 2,
        "initialValue": 0,
        "isEnum": true,
        "enumValues": [
          "RM",
          "AM"
        ],
        "displayName": "Mode",
        "unit": "",
        "order": 2,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 27,
        "name": "lowcut",
        "paramId": "p_obj-128/lowcut",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "LowCut",
        "unit": "%",
        "order": 1,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 28,
        "name": "highcut",
        "paramId": "p_obj-128/highcut",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "HighCut",
        "unit": "%",
        "order": 2,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 29,
        "name": "drive",
        "paramId": "p_obj-128/drive",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 25,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "Drive",
        "order": 3,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 30,
        "name": "mix",
        "paramId": "p_obj-128/mix",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 50,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Mix",
        "unit": "%",
        "order": 9,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 31,
        "name": "volume",
        "paramId": "p_obj-128/volume",
        "minimum": -100,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Volume",
        "unit": "%",
        "order": 8,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 32,
        "name": "midfreq",
        "paramId": "p_obj-128/midfreq",
        "minimum": -100,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "MidFreq",
        "unit": "%",
        "order": 5,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 33,
        "name": "treble",
        "paramId": "p_obj-128/treble",
        "minimum": -100,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Treble",
        "unit": "%",
        "order": 7,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 34,
        "name": "mid",
        "paramId": "p_obj-128/mid",
        "minimum": -100,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Mid",
        "unit": "%",
        "order": 6,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 35,
        "name": "bass",
        "paramId": "p_obj-128/bass",
        "minimum": -100,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Bass",
        "unit": "%",
        "order": 4,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 36,
        "name": "AM",
        "paramId": "p_obj-17/AM",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "AM",
        "unit": "%",
        "order": 4,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 37,
        "name": "mix",
        "paramId": "p_obj-17/mix",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 50,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "Mix",
        "order": 7,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 38,
        "name": "drive",
        "paramId": "p_obj-17/drive",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 25,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Drive",
        "unit": "%",
        "order": 6,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 39,
        "name": "tone",
        "paramId": "p_obj-17/tone",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 50,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Tone",
        "unit": "%",
        "order": 5,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 40,
        "name": "rectified",
        "paramId": "p_obj-17/rectified",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Rectified",
        "unit": "%",
        "order": 3,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 41,
        "name": "octave2",
        "paramId": "p_obj-17/octave2",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Octave2",
        "unit": "%",
        "order": 2,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 42,
        "name": "octave1",
        "paramId": "p_obj-17/octave1",
        "minimum": 0,
        "maximum": 100,
        "exponent": 1,
        "steps": 0,
        "initialValue": 100,
        "isEnum": false,
        "enumValues": [],
        "displayName": "Octave1",
        "unit": "%",
        "order": 1,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 43,
        "name": "left_delay",
        "paramId": "stereo_delay/left_delay",
        "minimum": 10,
        "maximum": 10000,
        "exponent": 1,
        "steps": 0,
        "initialValue": 300,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 44,
        "name": "fb",
        "paramId": "stereo_delay/fb",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0.25,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 45,
        "name": "right_delay",
        "paramId": "stereo_delay/right_delay",
        "minimum": 10,
        "maximum": 10000,
        "exponent": 1,
        "steps": 0,
        "initialValue": 400,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      }
    ],
    "numParameters": 46,
    "numSignalInParameters": 0,
    "numSignalOutParameters": 0,
    "numInputChannels": 0,
    "numOutputChannels": 2,
    "numMidiInputPorts": 1,
    "numMidiOutputPorts": 0,
    "transportUsed": true,
    "externalDataRefs": [
      {
        "id": "sbb_seq",
        "type": "Float64Buffer",
        "tag": "data"
      },
      {
        "id": "sbb_seq_4",
        "type": "Float64Buffer",
        "tag": "data"
      },
      {
        "id": "sbb_seq_3",
        "type": "Float64Buffer",
        "tag": "data"
      },
      {
        "id": "sbb_seq_2",
        "type": "Float64Buffer",
        "tag": "data"
      }
    ],
    "patcherSerial": 0,
    "inports": [
      {
        "tag": "in13",
        "meta": ""
      },
      {
        "tag": "in14",
        "meta": ""
      },
      {
        "tag": "in1",
        "meta": ""
      },
      {
        "tag": "in2",
        "meta": ""
      },
      {
        "tag": "in3",
        "meta": ""
      },
      {
        "tag": "in4",
        "meta": ""
      },
      {
        "tag": "in5",
        "meta": ""
      },
      {
        "tag": "in6",
        "meta": ""
      },
      {
        "tag": "in7",
        "meta": ""
      },
      {
        "tag": "in8",
        "meta": ""
      },
      {
        "tag": "in9",
        "meta": ""
      },
      {
        "tag": "in10",
        "meta": ""
      },
      {
        "tag": "in11",
        "meta": ""
      },
      {
        "tag": "in12",
        "meta": ""
      }
    ],
    "outports": [
      {
        "tag": "atten",
        "meta": ""
      },
      {
        "tag": "compens",
        "meta": ""
      }
    ],
    "inlets": [
      {
        "type": "event",
        "index": 1,
        "tag": "in1",
        "meta": "",
        "comment": "turn sequencer on or off"
      },
      {
        "type": "event",
        "index": 2,
        "tag": "in2",
        "meta": "",
        "comment": "incoming note for 8th note (range limited to 2-15)"
      },
      {
        "type": "event",
        "index": 3,
        "tag": "in3",
        "meta": "",
        "comment": "incoming note for 16th note (range limited to 20-50)"
      },
      {
        "type": "event",
        "index": 4,
        "tag": "in4",
        "meta": "",
        "comment": "incoming note for 32th note (range limited to 1000-5000)"
      },
      {
        "type": "event",
        "index": 5,
        "tag": "in5",
        "meta": "",
        "comment": "open gate for 8th note (1/0)"
      },
      {
        "type": "event",
        "index": 6,
        "tag": "in6",
        "meta": "",
        "comment": "open gate for 16th note (1/0)"
      },
      {
        "type": "event",
        "index": 7,
        "tag": "in7",
        "meta": "",
        "comment": "open gate for 32th note (1/0)"
      },
      {
        "type": "event",
        "index": 8,
        "tag": "in8",
        "meta": "",
        "comment": "reset all grid into nil (Bang)"
      },
      {
        "type": "event",
        "index": 9,
        "tag": "in9",
        "meta": "",
        "comment": "activate 8th note fade out (Bang)"
      },
      {
        "type": "event",
        "index": 10,
        "tag": "in10",
        "meta": "",
        "comment": "activate 16th note fade out (Bang)"
      },
      {
        "type": "event",
        "index": 11,
        "tag": "in11",
        "meta": "",
        "comment": "activate 32th note fade out (Bang)"
      },
      {
        "type": "event",
        "index": 12,
        "tag": "in12",
        "meta": "",
        "comment": "trigger for water droplet"
      },
      {
        "type": "event",
        "index": 13,
        "tag": "in13",
        "meta": "",
        "comment": "selection for delay preset"
      },
      {
        "type": "event",
        "index": 14,
        "tag": "in14",
        "meta": "",
        "comment": "delay feedback"
      },
      {
        "type": "midi"
      }
    ],
    "outlets": [
      {
        "type": "signal",
        "index": 1,
        "tag": "out1",
        "meta": ""
      },
      {
        "type": "signal",
        "index": 2,
        "tag": "out2",
        "meta": ""
      }
    ],
    "paramConversion": {
      "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
      "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_41.getNumParameters())\r\n            return this.p_41.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_41.getNumParameters();\r\n\r\n        if (index < this.p_42.getNumParameters())\r\n            return this.p_42.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_42.getNumParameters();\r\n\r\n        if (index < this.p_43.getNumParameters())\r\n            return this.p_43.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_43.getNumParameters();\r\n\r\n        if (index < this.p_44.getNumParameters())\r\n            return this.p_44.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_44.getNumParameters();\r\n\r\n        if (index < this.p_45.getNumParameters())\r\n            return this.p_45.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_45.getNumParameters();\r\n\r\n        if (index < this.p_46.getNumParameters())\r\n            return this.p_46.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_46.getNumParameters();\r\n\r\n        if (index < this.p_47.getNumParameters())\r\n            return this.p_47.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_47.getNumParameters();\r\n\r\n        if (index < this.p_48.getNumParameters())\r\n            return this.p_48.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_48.getNumParameters();\r\n\r\n        if (index < this.p_49.getNumParameters())\r\n            return this.p_49.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_49.getNumParameters();\r\n\r\n        if (index < this.p_50.getNumParameters())\r\n            return this.p_50.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_50.getNumParameters();\r\n\r\n        if (index < this.p_51.getNumParameters())\r\n            return this.p_51.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_51.getNumParameters();\r\n\r\n        if (index < this.p_52.getNumParameters())\r\n            return this.p_52.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_52.getNumParameters();\r\n\r\n        if (index < this.p_53.getNumParameters())\r\n            return this.p_53.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_53.getNumParameters();\r\n\r\n        if (index < this.p_54.getNumParameters())\r\n            return this.p_54.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_54.getNumParameters();\r\n\r\n        if (index < this.p_55.getNumParameters())\r\n            return this.p_55.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_55.getNumParameters();\r\n\r\n        if (index < this.p_56.getNumParameters())\r\n            return this.p_56.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
      "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_41.getNumParameters())\r\n            return this.p_41.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_41.getNumParameters();\r\n\r\n        if (index < this.p_42.getNumParameters())\r\n            return this.p_42.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_42.getNumParameters();\r\n\r\n        if (index < this.p_43.getNumParameters())\r\n            return this.p_43.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_43.getNumParameters();\r\n\r\n        if (index < this.p_44.getNumParameters())\r\n            return this.p_44.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_44.getNumParameters();\r\n\r\n        if (index < this.p_45.getNumParameters())\r\n            return this.p_45.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_45.getNumParameters();\r\n\r\n        if (index < this.p_46.getNumParameters())\r\n            return this.p_46.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_46.getNumParameters();\r\n\r\n        if (index < this.p_47.getNumParameters())\r\n            return this.p_47.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_47.getNumParameters();\r\n\r\n        if (index < this.p_48.getNumParameters())\r\n            return this.p_48.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_48.getNumParameters();\r\n\r\n        if (index < this.p_49.getNumParameters())\r\n            return this.p_49.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_49.getNumParameters();\r\n\r\n        if (index < this.p_50.getNumParameters())\r\n            return this.p_50.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_50.getNumParameters();\r\n\r\n        if (index < this.p_51.getNumParameters())\r\n            return this.p_51.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_51.getNumParameters();\r\n\r\n        if (index < this.p_52.getNumParameters())\r\n            return this.p_52.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_52.getNumParameters();\r\n\r\n        if (index < this.p_53.getNumParameters())\r\n            return this.p_53.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_53.getNumParameters();\r\n\r\n        if (index < this.p_54.getNumParameters())\r\n            return this.p_54.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_54.getNumParameters();\r\n\r\n        if (index < this.p_55.getNumParameters())\r\n            return this.p_55.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_55.getNumParameters();\r\n\r\n        if (index < this.p_56.getNumParameters())\r\n            return this.p_56.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
      "getNumParameters": "function getNumParameters() {\r\n    return 0 + this.p_41.getNumParameters() + this.p_42.getNumParameters() + this.p_43.getNumParameters() + this.p_44.getNumParameters() + this.p_45.getNumParameters() + this.p_46.getNumParameters() + this.p_47.getNumParameters() + this.p_48.getNumParameters() + this.p_49.getNumParameters() + this.p_50.getNumParameters() + this.p_51.getNumParameters() + this.p_52.getNumParameters() + this.p_53.getNumParameters() + this.p_54.getNumParameters() + this.p_55.getNumParameters() + this.p_56.getNumParameters();\r\n}",
      "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_41.getNumParameters())\r\n            return this.p_41.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_41.getNumParameters();\r\n\r\n        if (index < this.p_42.getNumParameters())\r\n            return this.p_42.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_42.getNumParameters();\r\n\r\n        if (index < this.p_43.getNumParameters())\r\n            return this.p_43.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_43.getNumParameters();\r\n\r\n        if (index < this.p_44.getNumParameters())\r\n            return this.p_44.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_44.getNumParameters();\r\n\r\n        if (index < this.p_45.getNumParameters())\r\n            return this.p_45.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_45.getNumParameters();\r\n\r\n        if (index < this.p_46.getNumParameters())\r\n            return this.p_46.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_46.getNumParameters();\r\n\r\n        if (index < this.p_47.getNumParameters())\r\n            return this.p_47.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_47.getNumParameters();\r\n\r\n        if (index < this.p_48.getNumParameters())\r\n            return this.p_48.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_48.getNumParameters();\r\n\r\n        if (index < this.p_49.getNumParameters())\r\n            return this.p_49.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_49.getNumParameters();\r\n\r\n        if (index < this.p_50.getNumParameters())\r\n            return this.p_50.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_50.getNumParameters();\r\n\r\n        if (index < this.p_51.getNumParameters())\r\n            return this.p_51.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_51.getNumParameters();\r\n\r\n        if (index < this.p_52.getNumParameters())\r\n            return this.p_52.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_52.getNumParameters();\r\n\r\n        if (index < this.p_53.getNumParameters())\r\n            return this.p_53.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_53.getNumParameters();\r\n\r\n        if (index < this.p_54.getNumParameters())\r\n            return this.p_54.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_54.getNumParameters();\r\n\r\n        if (index < this.p_55.getNumParameters())\r\n            return this.p_55.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_55.getNumParameters();\r\n\r\n        if (index < this.p_56.getNumParameters())\r\n            return this.p_56.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
      "subpatches": {
        "p_41": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_42": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    case 3:\r\n        {\r\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n            let normalizedValue = (value - 0) / (1 - 0);\r\n\r\n            {\r\n                normalizedValue = this.applyStepsToNormalizedParameterValue(normalizedValue, 2);\r\n            }\r\n\r\n            return normalizedValue;\r\n        }\r\n    case 0:\r\n        {\r\n            value = (value < 0 ? 0 : (value > 2 ? 2 : value));\r\n            let normalizedValue = (value - 0) / (2 - 0);\r\n\r\n            {\r\n                normalizedValue = this.applyStepsToNormalizedParameterValue(normalizedValue, 3);\r\n            }\r\n\r\n            return normalizedValue;\r\n        }\r\n    case 2:\r\n    case 4:\r\n    case 5:\r\n        {\r\n            value = (value < 0 ? 0 : (value > 100 ? 100 : value));\r\n            let normalizedValue = (value - 0) / (100 - 0);\r\n            return normalizedValue;\r\n        }\r\n    case 1:\r\n        {\r\n            value = (value < -100 ? -100 : (value > 100 ? 100 : value));\r\n            let normalizedValue = (value - -100) / (100 - -100);\r\n            return normalizedValue;\r\n        }\r\n    default:\r\n        index -= 6;\r\n\r\n        if (index < this.p_01.getNumParameters())\r\n            return this.p_01.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_01.getNumParameters();\r\n\r\n        if (index < this.p_02.getNumParameters())\r\n            return this.p_02.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_02.getNumParameters();\r\n\r\n        if (index < this.p_03.getNumParameters())\r\n            return this.p_03.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_03.getNumParameters();\r\n\r\n        if (index < this.p_04.getNumParameters())\r\n            return this.p_04.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    case 3:\r\n        {\r\n            {\r\n                value = this.applyStepsToNormalizedParameterValue(value, 2);\r\n            }\r\n\r\n            {\r\n                return 0 + value * (1 - 0);\r\n            }\r\n        }\r\n    case 0:\r\n        {\r\n            {\r\n                value = this.applyStepsToNormalizedParameterValue(value, 3);\r\n            }\r\n\r\n            {\r\n                return 0 + value * (2 - 0);\r\n            }\r\n        }\r\n    case 2:\r\n    case 4:\r\n    case 5:\r\n        {\r\n            {\r\n                return 0 + value * (100 - 0);\r\n            }\r\n        }\r\n    case 1:\r\n        {\r\n            {\r\n                return -100 + value * (100 - -100);\r\n            }\r\n        }\r\n    default:\r\n        index -= 6;\r\n\r\n        if (index < this.p_01.getNumParameters())\r\n            return this.p_01.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_01.getNumParameters();\r\n\r\n        if (index < this.p_02.getNumParameters())\r\n            return this.p_02.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_02.getNumParameters();\r\n\r\n        if (index < this.p_03.getNumParameters())\r\n            return this.p_03.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_03.getNumParameters();\r\n\r\n        if (index < this.p_04.getNumParameters())\r\n            return this.p_04.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 6 + this.p_01.getNumParameters() + this.p_02.getNumParameters() + this.p_03.getNumParameters() + this.p_04.getNumParameters();\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    case 0:\r\n        {\r\n            v = (v > 2 ? 2 : (v < 0 ? 0 : v));\r\n\r\n            {\r\n                const oneStep = 2 / 2;\r\n                const oneStepInv = (oneStep != 0 ? 1 / oneStep : 0);\r\n                const numberOfSteps = rnbo_fround(v * oneStepInv * 1 / 1) * 1;\r\n                v = numberOfSteps * oneStep;\r\n            }\r\n\r\n            return v;\r\n        }\r\n    case 1:\r\n        {\r\n            v = (v > 100 ? 100 : (v < -100 ? -100 : v));\r\n            return v;\r\n        }\r\n    case 2:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 3:\r\n        {\r\n            v = (v > 1 ? 1 : (v < 0 ? 0 : v));\r\n\r\n            {\r\n                const oneStep = 1 / 1;\r\n                const oneStepInv = (oneStep != 0 ? 1 / oneStep : 0);\r\n                const numberOfSteps = rnbo_fround(v * oneStepInv * 1 / 1) * 1;\r\n                v = numberOfSteps * oneStep;\r\n            }\r\n\r\n            return v;\r\n        }\r\n    case 4:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 5:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    default:\r\n        index -= 6;\r\n\r\n        if (index < this.p_01.getNumParameters())\r\n            return this.p_01.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_01.getNumParameters();\r\n\r\n        if (index < this.p_02.getNumParameters())\r\n            return this.p_02.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_02.getNumParameters();\r\n\r\n        if (index < this.p_03.getNumParameters())\r\n            return this.p_03.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_03.getNumParameters();\r\n\r\n        if (index < this.p_04.getNumParameters())\r\n            return this.p_04.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "subpatches": {
            "p_01": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_02": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_03": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_04": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        },
        "p_43": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    case 0:\r\n    case 1:\r\n    case 2:\r\n    case 3:\r\n    case 4:\r\n    case 5:\r\n    case 6:\r\n    case 7:\r\n    case 8:\r\n    case 9:\r\n    case 11:\r\n    case 12:\r\n        {\r\n            value = (value < 0 ? 0 : (value > 100 ? 100 : value));\r\n            let normalizedValue = (value - 0) / (100 - 0);\r\n            return normalizedValue;\r\n        }\r\n    case 14:\r\n        {\r\n            value = (value < 0 ? 0 : (value > 1000 ? 1000 : value));\r\n            let normalizedValue = (value - 0) / (1000 - 0);\r\n            return normalizedValue;\r\n        }\r\n    case 13:\r\n        {\r\n            value = (value < 25 ? 25 : (value > 250 ? 250 : value));\r\n            let normalizedValue = (value - 25) / (250 - 25);\r\n            return normalizedValue;\r\n        }\r\n    case 10:\r\n        {\r\n            value = (value < -24 ? -24 : (value > 24 ? 24 : value));\r\n            let normalizedValue = (value - -24) / (24 - -24);\r\n            return normalizedValue;\r\n        }\r\n    default:\r\n        index -= 15;\r\n\r\n        if (index < this.p_18.getNumParameters())\r\n            return this.p_18.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_18.getNumParameters();\r\n\r\n        if (index < this.p_19.getNumParameters())\r\n            return this.p_19.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_19.getNumParameters();\r\n\r\n        if (index < this.p_20.getNumParameters())\r\n            return this.p_20.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_20.getNumParameters();\r\n\r\n        if (index < this.p_21.getNumParameters())\r\n            return this.p_21.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_21.getNumParameters();\r\n\r\n        if (index < this.p_22.getNumParameters())\r\n            return this.p_22.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_22.getNumParameters();\r\n\r\n        if (index < this.p_23.getNumParameters())\r\n            return this.p_23.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_23.getNumParameters();\r\n\r\n        if (index < this.p_24.getNumParameters())\r\n            return this.p_24.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_24.getNumParameters();\r\n\r\n        if (index < this.p_25.getNumParameters())\r\n            return this.p_25.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    case 0:\r\n    case 1:\r\n    case 2:\r\n    case 3:\r\n    case 4:\r\n    case 5:\r\n    case 6:\r\n    case 7:\r\n    case 8:\r\n    case 9:\r\n    case 11:\r\n    case 12:\r\n        {\r\n            {\r\n                return 0 + value * (100 - 0);\r\n            }\r\n        }\r\n    case 14:\r\n        {\r\n            {\r\n                return 0 + value * (1000 - 0);\r\n            }\r\n        }\r\n    case 13:\r\n        {\r\n            {\r\n                return 25 + value * (250 - 25);\r\n            }\r\n        }\r\n    case 10:\r\n        {\r\n            {\r\n                return -24 + value * (24 - -24);\r\n            }\r\n        }\r\n    default:\r\n        index -= 15;\r\n\r\n        if (index < this.p_18.getNumParameters())\r\n            return this.p_18.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_18.getNumParameters();\r\n\r\n        if (index < this.p_19.getNumParameters())\r\n            return this.p_19.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_19.getNumParameters();\r\n\r\n        if (index < this.p_20.getNumParameters())\r\n            return this.p_20.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_20.getNumParameters();\r\n\r\n        if (index < this.p_21.getNumParameters())\r\n            return this.p_21.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_21.getNumParameters();\r\n\r\n        if (index < this.p_22.getNumParameters())\r\n            return this.p_22.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_22.getNumParameters();\r\n\r\n        if (index < this.p_23.getNumParameters())\r\n            return this.p_23.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_23.getNumParameters();\r\n\r\n        if (index < this.p_24.getNumParameters())\r\n            return this.p_24.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_24.getNumParameters();\r\n\r\n        if (index < this.p_25.getNumParameters())\r\n            return this.p_25.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 15 + this.p_18.getNumParameters() + this.p_19.getNumParameters() + this.p_20.getNumParameters() + this.p_21.getNumParameters() + this.p_22.getNumParameters() + this.p_23.getNumParameters() + this.p_24.getNumParameters() + this.p_25.getNumParameters();\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    case 0:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 1:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 2:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 3:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 4:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 5:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 6:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 7:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 8:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 9:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 10:\r\n        {\r\n            v = (v > 24 ? 24 : (v < -24 ? -24 : v));\r\n            return v;\r\n        }\r\n    case 11:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 12:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 13:\r\n        {\r\n            v = (v > 250 ? 250 : (v < 25 ? 25 : v));\r\n            return v;\r\n        }\r\n    case 14:\r\n        {\r\n            v = (v > 1000 ? 1000 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    default:\r\n        index -= 15;\r\n\r\n        if (index < this.p_18.getNumParameters())\r\n            return this.p_18.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_18.getNumParameters();\r\n\r\n        if (index < this.p_19.getNumParameters())\r\n            return this.p_19.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_19.getNumParameters();\r\n\r\n        if (index < this.p_20.getNumParameters())\r\n            return this.p_20.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_20.getNumParameters();\r\n\r\n        if (index < this.p_21.getNumParameters())\r\n            return this.p_21.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_21.getNumParameters();\r\n\r\n        if (index < this.p_22.getNumParameters())\r\n            return this.p_22.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_22.getNumParameters();\r\n\r\n        if (index < this.p_23.getNumParameters())\r\n            return this.p_23.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_23.getNumParameters();\r\n\r\n        if (index < this.p_24.getNumParameters())\r\n            return this.p_24.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_24.getNumParameters();\r\n\r\n        if (index < this.p_25.getNumParameters())\r\n            return this.p_25.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "subpatches": {
            "p_18": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_05.getNumParameters())\r\n            return this.p_05.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_05.getNumParameters();\r\n\r\n        if (index < this.p_06.getNumParameters())\r\n            return this.p_06.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_05.getNumParameters())\r\n            return this.p_05.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_05.getNumParameters();\r\n\r\n        if (index < this.p_06.getNumParameters())\r\n            return this.p_06.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0 + this.p_05.getNumParameters() + this.p_06.getNumParameters();\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_05.getNumParameters())\r\n            return this.p_05.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_05.getNumParameters();\r\n\r\n        if (index < this.p_06.getNumParameters())\r\n            return this.p_06.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "subpatches": {
                "p_05": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                },
                "p_06": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": false
            },
            "p_19": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_20": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_21": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_07.getNumParameters())\r\n            return this.p_07.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_07.getNumParameters();\r\n\r\n        if (index < this.p_08.getNumParameters())\r\n            return this.p_08.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_08.getNumParameters();\r\n\r\n        if (index < this.p_09.getNumParameters())\r\n            return this.p_09.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_09.getNumParameters();\r\n\r\n        if (index < this.p_10.getNumParameters())\r\n            return this.p_10.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_10.getNumParameters();\r\n\r\n        if (index < this.p_11.getNumParameters())\r\n            return this.p_11.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_11.getNumParameters();\r\n\r\n        if (index < this.p_12.getNumParameters())\r\n            return this.p_12.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_12.getNumParameters();\r\n\r\n        if (index < this.p_13.getNumParameters())\r\n            return this.p_13.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_13.getNumParameters();\r\n\r\n        if (index < this.p_14.getNumParameters())\r\n            return this.p_14.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_07.getNumParameters())\r\n            return this.p_07.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_07.getNumParameters();\r\n\r\n        if (index < this.p_08.getNumParameters())\r\n            return this.p_08.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_08.getNumParameters();\r\n\r\n        if (index < this.p_09.getNumParameters())\r\n            return this.p_09.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_09.getNumParameters();\r\n\r\n        if (index < this.p_10.getNumParameters())\r\n            return this.p_10.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_10.getNumParameters();\r\n\r\n        if (index < this.p_11.getNumParameters())\r\n            return this.p_11.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_11.getNumParameters();\r\n\r\n        if (index < this.p_12.getNumParameters())\r\n            return this.p_12.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_12.getNumParameters();\r\n\r\n        if (index < this.p_13.getNumParameters())\r\n            return this.p_13.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_13.getNumParameters();\r\n\r\n        if (index < this.p_14.getNumParameters())\r\n            return this.p_14.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0 + this.p_07.getNumParameters() + this.p_08.getNumParameters() + this.p_09.getNumParameters() + this.p_10.getNumParameters() + this.p_11.getNumParameters() + this.p_12.getNumParameters() + this.p_13.getNumParameters() + this.p_14.getNumParameters();\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_07.getNumParameters())\r\n            return this.p_07.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_07.getNumParameters();\r\n\r\n        if (index < this.p_08.getNumParameters())\r\n            return this.p_08.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_08.getNumParameters();\r\n\r\n        if (index < this.p_09.getNumParameters())\r\n            return this.p_09.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_09.getNumParameters();\r\n\r\n        if (index < this.p_10.getNumParameters())\r\n            return this.p_10.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_10.getNumParameters();\r\n\r\n        if (index < this.p_11.getNumParameters())\r\n            return this.p_11.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_11.getNumParameters();\r\n\r\n        if (index < this.p_12.getNumParameters())\r\n            return this.p_12.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_12.getNumParameters();\r\n\r\n        if (index < this.p_13.getNumParameters())\r\n            return this.p_13.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_13.getNumParameters();\r\n\r\n        if (index < this.p_14.getNumParameters())\r\n            return this.p_14.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "subpatches": {
                "p_07": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                },
                "p_08": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                },
                "p_09": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                },
                "p_10": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                },
                "p_11": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                },
                "p_12": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                },
                "p_13": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                },
                "p_14": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": false
            },
            "p_22": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_23": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_15.getNumParameters())\r\n            return this.p_15.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_15.getNumParameters())\r\n            return this.p_15.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0 + this.p_15.getNumParameters();\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_15.getNumParameters())\r\n            return this.p_15.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "subpatches": {
                "p_15": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": false
            },
            "p_24": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_25": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_16.getNumParameters())\r\n            return this.p_16.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_16.getNumParameters();\r\n\r\n        if (index < this.p_17.getNumParameters())\r\n            return this.p_17.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_16.getNumParameters())\r\n            return this.p_16.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_16.getNumParameters();\r\n\r\n        if (index < this.p_17.getNumParameters())\r\n            return this.p_17.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0 + this.p_16.getNumParameters() + this.p_17.getNumParameters();\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_16.getNumParameters())\r\n            return this.p_16.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_16.getNumParameters();\r\n\r\n        if (index < this.p_17.getNumParameters())\r\n            return this.p_17.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "subpatches": {
                "p_16": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                },
                "p_17": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        },
        "p_44": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    case 1:\r\n        {\r\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n            let normalizedValue = (value - 0) / (1 - 0);\r\n            return normalizedValue;\r\n        }\r\n    case 0:\r\n    case 2:\r\n        {\r\n            value = (value < 10 ? 10 : (value > 10000 ? 10000 : value));\r\n            let normalizedValue = (value - 10) / (10000 - 10);\r\n            return normalizedValue;\r\n        }\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    case 1:\r\n        {\r\n            {\r\n                return 0 + value * (1 - 0);\r\n            }\r\n        }\r\n    case 0:\r\n    case 2:\r\n        {\r\n            {\r\n                return 10 + value * (10000 - 10);\r\n            }\r\n        }\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 3;\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    case 0:\r\n        {\r\n            v = (v > 10000 ? 10000 : (v < 10 ? 10 : v));\r\n            return v;\r\n        }\r\n    case 1:\r\n        {\r\n            v = (v > 1 ? 1 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 2:\r\n        {\r\n            v = (v > 10000 ? 10000 : (v < 10 ? 10 : v));\r\n            return v;\r\n        }\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_45": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    case 1:\r\n    case 2:\r\n        {\r\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n            let normalizedValue = (value - 0) / (1 - 0);\r\n\r\n            {\r\n                normalizedValue = this.applyStepsToNormalizedParameterValue(normalizedValue, 2);\r\n            }\r\n\r\n            return normalizedValue;\r\n        }\r\n    case 0:\r\n        {\r\n            value = (value < 0 ? 0 : (value > 100 ? 100 : value));\r\n            let normalizedValue = (value - 0) / (100 - 0);\r\n            return normalizedValue;\r\n        }\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    case 1:\r\n    case 2:\r\n        {\r\n            {\r\n                value = this.applyStepsToNormalizedParameterValue(value, 2);\r\n            }\r\n\r\n            {\r\n                return 0 + value * (1 - 0);\r\n            }\r\n        }\r\n    case 0:\r\n        {\r\n            {\r\n                return 0 + value * (100 - 0);\r\n            }\r\n        }\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 3;\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    case 0:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 1:\r\n        {\r\n            v = (v > 1 ? 1 : (v < 0 ? 0 : v));\r\n\r\n            {\r\n                const oneStep = 1 / 1;\r\n                const oneStepInv = (oneStep != 0 ? 1 / oneStep : 0);\r\n                const numberOfSteps = rnbo_fround(v * oneStepInv * 1 / 1) * 1;\r\n                v = numberOfSteps * oneStep;\r\n            }\r\n\r\n            return v;\r\n        }\r\n    case 2:\r\n        {\r\n            v = (v > 1 ? 1 : (v < 0 ? 0 : v));\r\n\r\n            {\r\n                const oneStep = 1 / 1;\r\n                const oneStepInv = (oneStep != 0 ? 1 / oneStep : 0);\r\n                const numberOfSteps = rnbo_fround(v * oneStepInv * 1 / 1) * 1;\r\n                v = numberOfSteps * oneStep;\r\n            }\r\n\r\n            return v;\r\n        }\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_46": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_47": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_48": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_49": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_50": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    case 0:\r\n    case 1:\r\n    case 2:\r\n    case 3:\r\n        {\r\n            value = (value < 0 ? 0 : (value > 100 ? 100 : value));\r\n            let normalizedValue = (value - 0) / (100 - 0);\r\n            return normalizedValue;\r\n        }\r\n    case 4:\r\n    case 5:\r\n    case 6:\r\n    case 7:\r\n    case 8:\r\n        {\r\n            value = (value < -100 ? -100 : (value > 100 ? 100 : value));\r\n            let normalizedValue = (value - -100) / (100 - -100);\r\n            return normalizedValue;\r\n        }\r\n    default:\r\n        index -= 9;\r\n\r\n        if (index < this.p_29.getNumParameters())\r\n            return this.p_29.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_29.getNumParameters();\r\n\r\n        if (index < this.p_30.getNumParameters())\r\n            return this.p_30.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_30.getNumParameters();\r\n\r\n        if (index < this.p_31.getNumParameters())\r\n            return this.p_31.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_31.getNumParameters();\r\n\r\n        if (index < this.p_32.getNumParameters())\r\n            return this.p_32.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_32.getNumParameters();\r\n\r\n        if (index < this.p_33.getNumParameters())\r\n            return this.p_33.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    case 0:\r\n    case 1:\r\n    case 2:\r\n    case 3:\r\n        {\r\n            {\r\n                return 0 + value * (100 - 0);\r\n            }\r\n        }\r\n    case 4:\r\n    case 5:\r\n    case 6:\r\n    case 7:\r\n    case 8:\r\n        {\r\n            {\r\n                return -100 + value * (100 - -100);\r\n            }\r\n        }\r\n    default:\r\n        index -= 9;\r\n\r\n        if (index < this.p_29.getNumParameters())\r\n            return this.p_29.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_29.getNumParameters();\r\n\r\n        if (index < this.p_30.getNumParameters())\r\n            return this.p_30.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_30.getNumParameters();\r\n\r\n        if (index < this.p_31.getNumParameters())\r\n            return this.p_31.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_31.getNumParameters();\r\n\r\n        if (index < this.p_32.getNumParameters())\r\n            return this.p_32.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_32.getNumParameters();\r\n\r\n        if (index < this.p_33.getNumParameters())\r\n            return this.p_33.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 9 + this.p_29.getNumParameters() + this.p_30.getNumParameters() + this.p_31.getNumParameters() + this.p_32.getNumParameters() + this.p_33.getNumParameters();\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    case 0:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 1:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 2:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 3:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 4:\r\n        {\r\n            v = (v > 100 ? 100 : (v < -100 ? -100 : v));\r\n            return v;\r\n        }\r\n    case 5:\r\n        {\r\n            v = (v > 100 ? 100 : (v < -100 ? -100 : v));\r\n            return v;\r\n        }\r\n    case 6:\r\n        {\r\n            v = (v > 100 ? 100 : (v < -100 ? -100 : v));\r\n            return v;\r\n        }\r\n    case 7:\r\n        {\r\n            v = (v > 100 ? 100 : (v < -100 ? -100 : v));\r\n            return v;\r\n        }\r\n    case 8:\r\n        {\r\n            v = (v > 100 ? 100 : (v < -100 ? -100 : v));\r\n            return v;\r\n        }\r\n    default:\r\n        index -= 9;\r\n\r\n        if (index < this.p_29.getNumParameters())\r\n            return this.p_29.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_29.getNumParameters();\r\n\r\n        if (index < this.p_30.getNumParameters())\r\n            return this.p_30.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_30.getNumParameters();\r\n\r\n        if (index < this.p_31.getNumParameters())\r\n            return this.p_31.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_31.getNumParameters();\r\n\r\n        if (index < this.p_32.getNumParameters())\r\n            return this.p_32.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_32.getNumParameters();\r\n\r\n        if (index < this.p_33.getNumParameters())\r\n            return this.p_33.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "subpatches": {
            "p_29": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_30": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_31": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_32": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_26.getNumParameters())\r\n            return this.p_26.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_26.getNumParameters();\r\n\r\n        if (index < this.p_27.getNumParameters())\r\n            return this.p_27.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_27.getNumParameters();\r\n\r\n        if (index < this.p_28.getNumParameters())\r\n            return this.p_28.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_26.getNumParameters())\r\n            return this.p_26.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_26.getNumParameters();\r\n\r\n        if (index < this.p_27.getNumParameters())\r\n            return this.p_27.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_27.getNumParameters();\r\n\r\n        if (index < this.p_28.getNumParameters())\r\n            return this.p_28.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0 + this.p_26.getNumParameters() + this.p_27.getNumParameters() + this.p_28.getNumParameters();\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_26.getNumParameters())\r\n            return this.p_26.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_26.getNumParameters();\r\n\r\n        if (index < this.p_27.getNumParameters())\r\n            return this.p_27.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_27.getNumParameters();\r\n\r\n        if (index < this.p_28.getNumParameters())\r\n            return this.p_28.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "subpatches": {
                "p_26": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                },
                "p_27": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                },
                "p_28": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": false
            },
            "p_33": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        },
        "p_51": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_52": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    case 0:\r\n    case 1:\r\n    case 2:\r\n    case 3:\r\n    case 4:\r\n    case 5:\r\n    case 6:\r\n        {\r\n            value = (value < 0 ? 0 : (value > 100 ? 100 : value));\r\n            let normalizedValue = (value - 0) / (100 - 0);\r\n            return normalizedValue;\r\n        }\r\n    default:\r\n        index -= 7;\r\n\r\n        if (index < this.p_34.getNumParameters())\r\n            return this.p_34.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_34.getNumParameters();\r\n\r\n        if (index < this.p_35.getNumParameters())\r\n            return this.p_35.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_35.getNumParameters();\r\n\r\n        if (index < this.p_36.getNumParameters())\r\n            return this.p_36.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_36.getNumParameters();\r\n\r\n        if (index < this.p_37.getNumParameters())\r\n            return this.p_37.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_37.getNumParameters();\r\n\r\n        if (index < this.p_38.getNumParameters())\r\n            return this.p_38.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_38.getNumParameters();\r\n\r\n        if (index < this.p_39.getNumParameters())\r\n            return this.p_39.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_39.getNumParameters();\r\n\r\n        if (index < this.p_40.getNumParameters())\r\n            return this.p_40.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    case 0:\r\n    case 1:\r\n    case 2:\r\n    case 3:\r\n    case 4:\r\n    case 5:\r\n    case 6:\r\n        {\r\n            {\r\n                return 0 + value * (100 - 0);\r\n            }\r\n        }\r\n    default:\r\n        index -= 7;\r\n\r\n        if (index < this.p_34.getNumParameters())\r\n            return this.p_34.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_34.getNumParameters();\r\n\r\n        if (index < this.p_35.getNumParameters())\r\n            return this.p_35.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_35.getNumParameters();\r\n\r\n        if (index < this.p_36.getNumParameters())\r\n            return this.p_36.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_36.getNumParameters();\r\n\r\n        if (index < this.p_37.getNumParameters())\r\n            return this.p_37.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_37.getNumParameters();\r\n\r\n        if (index < this.p_38.getNumParameters())\r\n            return this.p_38.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_38.getNumParameters();\r\n\r\n        if (index < this.p_39.getNumParameters())\r\n            return this.p_39.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_39.getNumParameters();\r\n\r\n        if (index < this.p_40.getNumParameters())\r\n            return this.p_40.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 7 + this.p_34.getNumParameters() + this.p_35.getNumParameters() + this.p_36.getNumParameters() + this.p_37.getNumParameters() + this.p_38.getNumParameters() + this.p_39.getNumParameters() + this.p_40.getNumParameters();\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    case 0:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 1:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 2:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 3:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 4:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 5:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 6:\r\n        {\r\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    default:\r\n        index -= 7;\r\n\r\n        if (index < this.p_34.getNumParameters())\r\n            return this.p_34.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_34.getNumParameters();\r\n\r\n        if (index < this.p_35.getNumParameters())\r\n            return this.p_35.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_35.getNumParameters();\r\n\r\n        if (index < this.p_36.getNumParameters())\r\n            return this.p_36.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_36.getNumParameters();\r\n\r\n        if (index < this.p_37.getNumParameters())\r\n            return this.p_37.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_37.getNumParameters();\r\n\r\n        if (index < this.p_38.getNumParameters())\r\n            return this.p_38.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_38.getNumParameters();\r\n\r\n        if (index < this.p_39.getNumParameters())\r\n            return this.p_39.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_39.getNumParameters();\r\n\r\n        if (index < this.p_40.getNumParameters())\r\n            return this.p_40.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "subpatches": {
            "p_34": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_35": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_36": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_37": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_38": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_39": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_40": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        },
        "p_53": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_54": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_55": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    case 1:\r\n        {\r\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n            let normalizedValue = (value - 0) / (1 - 0);\r\n            return normalizedValue;\r\n        }\r\n    case 0:\r\n    case 2:\r\n        {\r\n            value = (value < 10 ? 10 : (value > 10000 ? 10000 : value));\r\n            let normalizedValue = (value - 10) / (10000 - 10);\r\n            return normalizedValue;\r\n        }\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    case 1:\r\n        {\r\n            {\r\n                return 0 + value * (1 - 0);\r\n            }\r\n        }\r\n    case 0:\r\n    case 2:\r\n        {\r\n            {\r\n                return 10 + value * (10000 - 10);\r\n            }\r\n        }\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 3;\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    case 0:\r\n        {\r\n            v = (v > 10000 ? 10000 : (v < 10 ? 10 : v));\r\n            return v;\r\n        }\r\n    case 1:\r\n        {\r\n            v = (v > 1 ? 1 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 2:\r\n        {\r\n            v = (v > 10000 ? 10000 : (v < 10 ? 10 : v));\r\n            return v;\r\n        }\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_56": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
          "subpatches": {},
          "isPolyphonic": false
        }
      },
      "isPolyphonic": false
    },
    "presetid": "rnbo",
    "meta": {
      "architecture": "x64",
      "filename": "KungMoLane_3.maxpat",
      "rnboobjname": "rnbomatic",
      "maxversion": "9.0.3",
      "rnboversion": "1.3.3",
      "name": "HumanSequencer"
    }
  },
  "presets": [
    {
      "name": "HumanSequencer",
      "preset": {
        "__sps": {
          "32th": {},
          "Eighth": {},
          "Sixteenth": {},
          "Whole": {},
          "first": {},
          "first[1]": {},
          "first[2]": {},
          "mod.seq": {},
          "p_obj-12": {
            "__sps": {
              "Compensation~": {},
              "Compression~": {},
              "Lookahead~": {},
              "Volume&Clip~": {}
            },
            "attack": {
              "value": 25
            },
            "comp": {
              "value": 50
            },
            "lookahead": {
              "value": 1
            },
            "softclip": {
              "value": 0
            },
            "sustain": {
              "value": 25
            },
            "volume": {
              "value": 40
            }
          },
          "p_obj-128": {
            "__sps": {
              "Drive~": {},
              "Mix~": {},
              "Post-EQ~": {
                "__sps": {
                  "Bass~": {},
                  "Mid~": {},
                  "Treble~": {}
                }
              },
              "Pre-EQ~": {},
              "Volume~": {}
            },
            "bass": {
              "value": 0
            },
            "drive": {
              "value": 25
            },
            "highcut": {
              "value": 0
            },
            "lowcut": {
              "value": 0
            },
            "mid": {
              "value": 0
            },
            "midfreq": {
              "value": 0
            },
            "mix": {
              "value": 50
            },
            "treble": {
              "value": 0
            },
            "volume": {
              "value": 0
            }
          },
          "p_obj-17": {
            "AM": {
              "value": 0
            },
            "__sps": {
              "Drive~": {},
              "Lowpass~": {},
              "Mix~": {},
              "Oct1~": {},
              "Oct2~": {},
              "Rect~": {},
              "Tone~": {}
            },
            "drive": {
              "value": 25
            },
            "mix": {
              "value": 50
            },
            "octave1": {
              "value": 100
            },
            "octave2": {
              "value": 0
            },
            "rectified": {
              "value": 0
            },
            "tone": {
              "value": 50
            }
          },
          "p_obj-21": {
            "freq": {
              "value": 17.114500004160554
            },
            "mode": {
              "value": 0
            },
            "spread": {
              "value": 0
            }
          },
          "p_obj-345": {
            "__sps": {
              "Chorus~": {},
              "Delay~": {},
              "Feedback~": {
                "__sps": {
                  "Gate~": {}
                }
              },
              "Mix~": {},
              "Octave~": {
                "__sps": {
                  "Shift~": {},
                  "Shift~[1]": {}
                }
              },
              "Pitch~": {
                "__sps": {
                  "Shift~": {},
                  "Shift~[1]": {}
                }
              },
              "Reverb~": {
                "__sps": {
                  "Blur~": {},
                  "CombL~": {},
                  "CombR~": {},
                  "Damp~": {},
                  "MapParams": {},
                  "RoomA~": {},
                  "RoomB~": {},
                  "Shuffle~": {}
                }
              },
              "Volumes~": {}
            },
            "chorus": {
              "value": 50
            },
            "damp": {
              "value": 20
            },
            "decay": {
              "value": 70
            },
            "delay": {
              "value": 0
            },
            "diff": {
              "value": 50
            },
            "feedback": {
              "value": 50
            },
            "jitter": {
              "value": 50
            },
            "mix": {
              "value": 8
            },
            "octdamp": {
              "value": 50
            },
            "octvol": {
              "value": 50
            },
            "pitch": {
              "value": 12
            },
            "pitchvol": {
              "value": 0
            },
            "revvol": {
              "value": 100
            },
            "size": {
              "value": 75
            },
            "window": {
              "value": 125
            }
          },
          "stereo_delay": {
            "fb": {
              "value": 0.25
            },
            "left_delay": {
              "value": 300
            },
            "right_delay": {
              "value": 400
            }
          },
          "stereo_delay[1]": {
            "fb": {
              "value": 0.4
            },
            "left_delay": {
              "value": 300
            },
            "right_delay": {
              "value": 400
            }
          },
          "water": {}
        }
      }
    }
  ],
  "src": [
    {
      "code": "",
      "compression": "zlib",
      "encoding": "base64",
      "type": "wasm"
    }
  ]
}